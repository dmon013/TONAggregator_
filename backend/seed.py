# backend/seed.py (–§–ò–ù–ê–õ–¨–ù–ê–Ø –í–ï–†–°–ò–Ø, –∏—Å–ø—Ä–∞–≤–ª–µ–Ω—ã –≤—Å–µ –∏–º–ø–æ—Ä—Ç—ã)

import uuid
from datetime import datetime
import firebase_admin
from firebase_admin import credentials
# –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï: –ú—ã –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –∏–º–ø–æ—Ä—Ç 'firestore', –æ–Ω –Ω—É–∂–µ–Ω –¥–ª—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏
from firebase_admin import firestore
# –ò –ø—Ä–∏ —ç—Ç–æ–º –æ—Å—Ç–∞–≤–ª—è–µ–º –ø—Ä—è–º–æ–π –∏–º–ø–æ—Ä—Ç –¥–ª—è ArrayUnion, —á—Ç–æ–±—ã Pylance –±—ã–ª –¥–æ–≤–æ–ª–µ–Ω
from google.cloud.firestore_v1.transforms import ArrayUnion

# --- –ò–ù–ò–¶–ò–ê–õ–ò–ó–ê–¶–ò–Ø FIREBASE ---
CREDENTIALS_PATH = 'serviceAccountKey.json'
try:
    if not firebase_admin._apps:
        cred = credentials.Certificate(CREDENTIALS_PATH)
        db_app = firebase_admin.initialize_app(cred)
        # –¢–µ–ø–µ—Ä—å firestore.client() —Å–Ω–æ–≤–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç
        db = firestore.client(app=db_app)
    else:
        db = firestore.client()
    print("‚úÖ Firebase Admin SDK —É—Å–ø–µ—à–Ω–æ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω –¥–ª—è —Å–∏–¥–∏–Ω–≥–∞.")
except Exception as e:
    print(f"‚ùå –û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ Firebase: {e}")
    exit()


def get_test_data():
    """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ."""
    # ... (—ç—Ç–∞ —Ñ—É–Ω–∫—Ü–∏—è –æ—Å—Ç–∞–µ—Ç—Å—è –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π, —è –ø—Ä–∏–≤–æ–∂—É –µ–µ –¥–ª—è –ø–æ–ª–Ω–æ—Ç—ã —Ñ–∞–π–ª–∞)
    categories = [
        {'id': 'games', 'name': 'üéÆ –ò–≥—Ä—ã'},
        {'id': 'tools', 'name': 'üõ†Ô∏è –ò–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã'},
        {'id': 'finance', 'name': 'üí∞ –§–∏–Ω–∞–Ω—Å—ã'},
        {'id': 'social', 'name': 'üí¨ –°–æ—Ü–∏–∞–ª—å–Ω—ã–µ'}
    ]
    apps = [
        {'title': 'Catizen', 'short_description': '–£–≤–ª–µ–∫–∞—Ç–µ–ª—å–Ω–∞—è –∏–≥—Ä–∞ –ø—Ä–æ –∫–æ—Ç–∏–∫–æ–≤.', 'long_description': '–í—ã –º–æ–∂–µ—Ç–µ –≤—ã—Ä–∞—â–∏–≤–∞—Ç—å, —Å–∫—Ä–µ—â–∏–≤–∞—Ç—å –∏ –∫–æ–ª–ª–µ–∫—Ü–∏–æ–Ω–∏—Ä–æ–≤–∞—Ç—å —Ä–∞–∑–Ω–æ–æ–±—Ä–∞–∑–Ω—ã—Ö –∫–æ—Ç–∏–∫–æ–≤. –£—á–∞—Å—Ç–≤—É–π—Ç–µ –≤ –∏–≤–µ–Ω—Ç–∞—Ö –∏ –ø–æ–ª—É—á–∞–π—Ç–µ –Ω–∞–≥—Ä–∞–¥—ã!', 'app_url': 'https://t.me/catizenbot/game', 'category_id': 'games', 'icon_url': 'https://i.ibb.co/gLQbLqFD/catizen.jpg', 'screenshots': [ 'https://placehold.co/540x960/orange/white?text=Screenshot+1', 'https://placehold.co/540x960/orangered/white?text=Screenshot+2', 'https://placehold.co/540x960/coral/white?text=Screenshot+3',]},
        {'title': 'MemHustle', 'short_description': 'MemHustle', 'long_description': 'Based game for crypto hustlers. Lead memecoins to fight market scam.', 'app_url': 'https://t.me/MemHustle_bot', 'category_id': 'games', 'icon_url': 'https://i.ibb.co/q30fvTVK/mem-Hustle.jpg', 'screenshots': [ 'https://placehold.co/540x960/orange/white?text=Screenshot+1', 'https://placehold.co/540x960/orangered/white?text=Screenshot+2', 'https://placehold.co/540x960/coral/white?text=Screenshot+3',]},
        {'title': 'EGGONOMIC', 'short_description': 'EGGONOMIC', 'long_description': 'Eggonomic ‚Äî stake Telegram gifts, earn rewards & NFTs. ', 'app_url': 'https://t.me/eggonomicbot', 'category_id': 'tools', 'icon_url': 'https://i.ibb.co/5hFN0jXn/eggonomic.jpg', 'screenshots': [ 'https://placehold.co/540x960/orange/white?text=Screenshot+1', 'https://placehold.co/540x960/orangered/white?text=Screenshot+2', 'https://placehold.co/540x960/coral/white?text=Screenshot+3',]},
        {'title': 'WEB3 Portal', 'short_description': '–¢–æ—á–∫–∞ –≤—Ö–æ–¥–∞ –≤ TON DNS', 'long_description': '–í—Ö–æ–¥ –≤ —ç–∫–æ—Å–∏—Å—Ç–µ–º—É –æ—Ç–∫—Ä—ã—Ç ‚Äî –¥–æ—Å—Ç—É–ø –∫ WEB3 App, —Ä–µ–≤–∞—Ä–¥–∞–º, —Å–≤—è–∑–∏ —Å –∫–æ–º–∞–Ω–¥–æ–π, –ø—Ä–∏–≤–∞—Ç–Ω—ã–º –∫–∞–Ω–∞–ª–∞–º –∏ —á–∞—Ç–∞–º.', 'app_url': 'https://t.me/tondnsclub', 'category_id': 'social', 'icon_url': 'https://i.ibb.co/1YdPdfQK/web3portal.jpg', 'screenshots': [ 'https://placehold.co/540x960/orange/white?text=Screenshot+1', 'https://placehold.co/540x960/orangered/white?text=Screenshot+2', 'https://placehold.co/540x960/coral/white?text=Screenshot+3',]},
        {'title': 'Tonnel Relayer Bot', 'short_description': 'Gifts Market', 'long_description': '#1 Zero-Knowledge Privacy Protocol on TONüíé', 'app_url': 'https://t.me/Tonnel_Network_bot', 'category_id': 'finance', 'icon_url': 'https://i.ibb.co/Fky0rnsm/tonnel.jpg', 'screenshots': [ 'https://i.ibb.co/Y726V72R/image.png', 'https://i.ibb.co/QFCkSWhg/image.png', 'https://i.ibb.co/g8yx70k/image.png',]},
    ]
    news = [
        {'title': '–ó–∞–ø—É—Å–∫ TON Aggregator!', 'excerpt': '–ù–∞—à –Ω–æ–≤—ã–π –∞–≥—Ä–µ–≥–∞—Ç–æ—Ä –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π –Ω–∞ TON –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω–æ –∑–∞–ø—É—â–µ–Ω.', 'content': '<h1>–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å!</h1><p>–ü–æ–ª–Ω—ã–π —Ç–µ–∫—Å—Ç –Ω–æ–≤–æ—Å—Ç–∏...</p>', 'preview_url': 'https://placehold.co/800x400/2AABEE/white?text=Welcome!'},
        {'title': '–ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å Wallet Pay', 'excerpt': '–¢–µ–ø–µ—Ä—å –≤—ã –º–æ–∂–µ—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å Wallet Pay –¥–ª—è –ø—Ä—è–º—ã—Ö –æ–ø–ª–∞—Ç.', 'content': '<h2>–ù–æ–≤—ã–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏...</h2><p>–ú—ã —Ä–∞–¥—ã –æ–±—ä—è–≤–∏—Ç—å –æ –ø–æ–ª–Ω–æ–π –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏...</p>', 'preview_url': 'https://placehold.co/800x400/333/white?text=Wallet+Pay'},
    ]
    users = [
        # –¢–≤–æ–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
        {
            'id': '605700117',
            'telegram_id': 605700117,
            'username': 'd_monxiii',
            'photo_url': 'https://t.me/i/userpic/320/JBP4MuNa9W3Qh9GJ0AjDOCFCZR--myuB9c9lJFDeFec.svg',
            'is_admin': True,
            'my_apps': {} # –ù–∞—á–∞–ª—å–Ω–∞—è –ø—É—Å—Ç–∞—è —Å–µ—Ç–∫–∞
        },
        # –¢–µ—Å—Ç–æ–≤—ã–π –∞–¥–º–∏–Ω
        {'id': '123456789', 'telegram_id': 123456789, 'username': 'admin_user', 'photo_url': 'https://placehold.co/128x128/red/white?text=A', 'is_admin': True, 'my_apps': {}},
        # –¢–µ—Å—Ç–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
        {'id': '987654321', 'telegram_id': 987654321, 'username': 'test_user', 'photo_url': 'https://placehold.co/128x128/green/white?text=U', 'is_admin': False, 'my_apps': {}},
    ]
    return categories, apps, news, users


def seed_database():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö."""
    print("–ù–∞—á–∏–Ω–∞–µ–º –∑–∞–ø–æ–ª–Ω–µ–Ω–∏–µ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö...")
    
    categories_data, apps_data, news_data, users_data = get_test_data()
    
    # ... (–≤–µ—Å—å –∫–æ–¥ –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è –∫–æ–ª–ª–µ–∫—Ü–∏–π –æ—Å—Ç–∞–µ—Ç—Å—è –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π, —Ç–∞–∫ –∫–∞–∫ –æ–Ω —É–∂–µ –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π) ...
    # 1. –ö–∞—Ç–µ–≥–æ—Ä–∏–∏
    print("-> –ó–∞–ø–æ–ª–Ω—è–µ–º 'categories'...")
    for category in categories_data:
        db.collection('categories').document(category['id']).set(category)
    print("‚úÖ 'categories' —É—Å–ø–µ—à–Ω–æ –∑–∞–ø–æ–ª–Ω–µ–Ω—ã.")

    # 2. –ü—Ä–∏–ª–æ–∂–µ–Ω–∏—è
    print("-> –ó–∞–ø–æ–ª–Ω—è–µ–º 'apps'...")
    app_ids = []
    for app_info in apps_data:
        app_id = str(uuid.uuid4())
        app_ids.append(app_id)
        
        app_doc = {
            "id": app_id, "title": app_info['title'], "title_lowercase": app_info['title'].lower(),
            "short_description": app_info['short_description'], "long_description": app_info['long_description'],
            "screenshots": app_info.get('screenshots', []), # <--- –î–û–ë–ê–í–¨ –≠–¢–£ –°–¢–†–û–ö–£
            "app_url": app_info['app_url'], "category_id": app_info['category_id'], "icon_url": app_info['icon_url'],
            "is_approved": True, "created_at": datetime.utcnow(), "collection_ids": []
        }
        db.collection('apps').document(app_id).set(app_doc)
    print("‚úÖ 'apps' —É—Å–ø–µ—à–Ω–æ –∑–∞–ø–æ–ª–Ω–µ–Ω—ã.")

    # 3. –ù–æ–≤–æ—Å—Ç–∏
    print("-> –ó–∞–ø–æ–ª–Ω—è–µ–º 'news'...")
    for news_info in news_data:
        news_id = str(uuid.uuid4())
        news_doc = {
            "id": news_id, "title": news_info['title'], "excerpt": news_info['excerpt'],
            "content": news_info['content'], "preview_url": news_info['preview_url'],
            "created_at": datetime.utcnow()
        }
        db.collection('news').document(news_id).set(news_doc)
    print("‚úÖ 'news' —É—Å–ø–µ—à–Ω–æ –∑–∞–ø–æ–ª–Ω–µ–Ω—ã.")

    # 4. –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏
    print("-> –ó–∞–ø–æ–ª–Ω—è–µ–º 'users'...")
    users_data[1]['my_apps'] = {
        "0": app_ids[0], "2": app_ids[2], "15": app_ids[4]
    } 
    for user in users_data:
        db.collection('users').document(user['id']).set(user)
    print("‚úÖ 'users' —É—Å–ø–µ—à–Ω–æ –∑–∞–ø–æ–ª–Ω–µ–Ω—ã.")
    
    # 5. –ü–æ–¥–±–æ—Ä–∫–∏
    print("-> –ó–∞–ø–æ–ª–Ω—è–µ–º 'collections'...")
    collections_data = {
        'new': {'name': '‚ú® –ù–æ–≤–æ–µ', 'apps': app_ids[::-1][:3]},
        'trending': {'name': 'üî• –í —Ç—Ä–µ–Ω–¥–µ', 'apps': [app_ids[1], app_ids[0], app_ids[4]]},
        'top3': {'name': 'üèÜ –¢–æ–ø 3', 'apps': [app_ids[4], app_ids[2], app_ids[0]]}
    }
    for col_id, col_data in collections_data.items():
        db.collection('collections').document(col_id).set(col_data)
        for app_id in col_data['apps']:
            # –ò—Å–ø–æ–ª—å–∑—É–µ–º ArrayUnion, –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –Ω–∞–ø—Ä—è–º—É—é
            db.collection('apps').document(app_id).update({
                'collection_ids': ArrayUnion([col_id])
            })
    print("‚úÖ 'collections' —É—Å–ø–µ—à–Ω–æ –∑–∞–ø–æ–ª–Ω–µ–Ω—ã.")
    print("\nüéâ –í—Å–µ –¥–∞–Ω–Ω—ã–µ —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω—ã –≤ Firestore!")


if __name__ == '__main__':
    seed_database()